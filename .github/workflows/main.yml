name: Deploying application on Cloud run


on:
  workflow_call:
    secrets:
      sakey:
        required: true
      token:
        required: true


env: 
  tag: ${GITHUB_REF#refs/*/}
    

jobs:
  deploy_on_dev:
    if: contains(github.ref, 'dev')
    runs-on: ubuntu-latest
    steps:
      - name: Make repo name variable compliant with K8 namespace rules
        run: echo "reponame=$(echo ${{ github.event.repository.name }} | tr _ - )" >> $GITHUB_ENV
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sakey }}
      - name: Setup SDK 
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: labs-370214
          export_default_credentials: true 
      - name: Setup docker 
        run: gcloud auth configure-docker --quiet
      - name: Build and push image
        working-directory: ./
        run: |
          docker build . -t gcr.io/labs-370214/${{ env.reponame }}:${{env.tag}}
          docker push gcr.io/labs-370214/${{ env.reponame }}:${{env.tag}}
      - name: Checkout Pipeline repository
        uses: actions/checkout@v3
        with:
          repository: wgall/cloudrun_node_cicd
          token: ${{ secrets.token }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5
          terraform_wrapper: false
      - name: Authenitcate pipeline repository 
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sakey }}
      - name: Setup pipline repository
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: labs-370214
          export_default_credentials: true 
      - name: Check if registry exists
        id: repository_status
        run: echo "exists=$(gcloud run services list | grep ${{ env.reponame }}-dev | wc -l)" >> $GITHUB_ENV
      - name: Create Backend folder
        if:  ${{ env.exists == '0' }}
        working-directory: ./bucket
        run: terraform init && terraform apply --auto-approve -var "project=${{ env.reponame }}-dev/"
      - name: Initialize terraform 
        working-directory: ./dev
        run: |
          sed -i "s/folder/${{ env.reponame}}-dev/" main.tf
          terraform init -force-copy
      - name: Apply terraform 
        working-directory: ./dev
        run: | 
         terraform apply --auto-approve -var "image=${{env.reponame}}" -var "tag=${{env.tag}}" -var "project=${{env.reponame}}-dev" | grep "backend-id =" | cut -d " " -f 3
      - name: Map backend
        if: ${{ env.exists == '0' }}
        run: |
         gcloud compute url-maps add-path-matcher test --path-matcher-name=${{env.reponame}}-dev --default-service=https://www.googleapis.com/compute/v1/projects/labs-370214/global/backendServices/${{ env.reponame }}-dev --new-hosts="${{env.reponame}}-dev.gallit.net"
       #  gcloud compute backend-services update ${{ env.reponame }}-dev  --security-policy alllow-only-for-specific-ip  --global
  deploy_on_stage: 
    if: "!contains(github.ref, 'dev') && contains(github.ref, 'stage')" 
    runs-on: ubuntu-latest
    steps:
      - name: Make repo name variable compliant with K8 namespace rules
        run: echo "reponame=$(echo ${{ github.event.repository.name }} | tr _ - )" >> $GITHUB_ENV
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sakey }}
      - name: Setup SDK 
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: labs-370214
          export_default_credentials: true 
      - name: Setup docker 
        run: gcloud auth configure-docker --quiet
      - name: Build and push image
        working-directory: ./
        run: |
          docker build . -t gcr.io/labs-370214/${{ env.reponame }}:${{env.tag}}
          docker push gcr.io/labs-370214/${{ env.reponame }}:${{env.tag}}
      - name: Checkout Pipeline repository
        uses: actions/checkout@v3
        with:
          repository: wgall/cloudrun_node_cicd
          token: ${{ secrets.token }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5
          terraform_wrapper: false
      - name: Authenitcate pipeline repository 
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sakey }}
      - name: Setup pipline repository
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: labs-370214
          export_default_credentials: true 
      - name: Check if registry exists
        id: repository_status
        run: echo "exists=$(gcloud run services list | grep ${{ env.reponame }}-stage | wc -l)" >> $GITHUB_ENV
      - name: Create Backend folder
        if:  ${{ env.exists == '0' }}
        working-directory: ./bucket
        run: terraform init && terraform apply --auto-approve -var "project=${{ env.reponame }}-stage/"
      - name: Initialize terraform 
        working-directory: ./dev
        run: |
          sed -i "s/folder/${{ env.reponame}}-stage/" main.tf
          terraform init -force-copy
      - name: Apply terraform 
        working-directory: ./dev
        run: | 
         terraform apply --auto-approve -var "image=${{env.reponame}}" -var "tag=${{env.tag}}" -var "project=${{env.reponame}}-stage" | grep "backend-id =" | cut -d " " -f 3
      - name: Map backend
        if: ${{ env.exists == '0' }}
        run: |
         gcloud compute url-maps add-path-matcher test --path-matcher-name=${{env.reponame}}-stage --default-service=https://www.googleapis.com/compute/v1/projects/labs-370214/global/backendServices/${{ env.reponame }}-stage --new-hosts="${{env.reponame}}-stage.gallit.net"
  deploy_tagged_version:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sakey }}
      - name: Setup SDK 
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: labs-370214
          export_default_credentials: true 
      - name: Setup docker 
        run: gcloud auth configure-docker --quiet
      - name: Build and push image
        working-directory: ./
        run: |
          docker build . -t gcr.io/labs-370214/${{ env.reponame }}:${{env.tag}}
          docker push gcr.io/labs-370214/${{ env.reponame }}:${{env.tag}}
      - name: Make repo name variable compliant with K8 namespace rules
        run: echo "reponame=$(echo ${{ github.event.repository.name }} | tr _ - )" >> $GITHUB_ENV
      - name: Checkout Pipeline repository
        uses: actions/checkout@v3
        with:
          repository: wgall/cloudrun_node_cicd
          token: ${{ secrets.token }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5
          terraform_wrapper: false
      - name: Authenitcate pipeline repository 
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.sakey }}
      - name: Setup pipline repository
        uses: google-github-actions/setup-gcloud@main 
        with:
          project_id: labs-370214
          export_default_credentials: true 
      - name: Deploy application  
        working-directory: ./versioning
        env:
          tag: ${{ github.event.release.tag_name }}
        run: |
          version=$(echo ${{ env.tag }} | tr . -)
          terraform init 
          terraform apply --auto-approve -var "image=${{env.reponame}}" -var "tag=${{env.tag}}" -var "project=${{env.reponame}}-$version"
          gcloud compute url-maps add-path-matcher test --path-matcher-name=${{env.reponame}}-$version --default-service=https://www.googleapis.com/compute/v1/projects/labs-370214/global/backendServices/${{ env.reponame }}-$version --new-hosts="${{env.reponame}}-$version.gallit.net"

